{"version":3,"sources":["component/card/card.js","component/card-lis/cardList.js","component/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","name","src","id","email","CardList","monsters","map","SearchBox","onChange","onchange","type","placeholder","App","serachFileHandler","e","setState","serachFiled","target","value","state","fetch","then","response","json","users","this","monstersFliterd","filter","toLowerCase","includes","console","log","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAKF,EAAMG,QAAQC,KACnBC,IAAG,+BAA0BL,EAAMM,GAAhC,4BAEL,6BAAKN,EAAMG,QAAQC,OACnB,4BAAIJ,EAAMG,QAAQI,YCPXC,EAAW,SAACR,GACvB,IAAQS,EAAaT,EAAbS,SAER,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAASC,KAAI,SAACP,GAAD,OACZ,cAAC,EAAD,CAAMA,QAASA,EAASG,GAAIH,EAAQG,WCP/BK,G,MAAY,SAACX,GACxB,OACE,8BACE,uBACEC,UAAU,SACVW,SAAUZ,EAAMa,SAChBC,KAAK,SACLC,YAAY,yBCgCLC,E,kDAnCb,aAAe,IAAD,8BACZ,gBAUFC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAXxB,EAAKC,MAAQ,CAAEd,SAAU,GAAIW,YAAa,IAF9B,E,qDAKd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAS/C,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YAEZU,EAAkBrB,EAASsB,QAAO,SAAC5B,GAAD,OACtCA,EAAQC,KAAK4B,cAAcC,SAASb,EAAYY,kBAIlD,OAFAE,QAAQC,IAAIL,GAGV,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,8BACA,cAAC,EAAD,CAAWY,SAAUgB,KAAKZ,oBAC1B,cAAC,EAAD,CAAUR,SAAUqB,W,GA9BVM,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dca8c8bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt={props.monster.name}\n        src={`https://robohash.org/${props.id}?set=set2&size=180x180`}\n      ></img>\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card\";\nexport const CardList = (props) => {\n  const { monsters } = props;\n\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card monster={monster} id={monster.id}></Card>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\nexport const SearchBox = (props) => {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        onChange={props.onchange}\n        type=\"serach\"\n        placeholder=\"Search to filter\"\n      ></input>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./component/card-lis/cardList\";\nimport { SearchBox } from \"./component/search-box/search-box\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { monsters: [], serachFiled: \"\" };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  serachFileHandler = (e) => {\n    this.setState({\n      serachFiled: e.target.value,\n    });\n  };\n\n  render() {\n    const { monsters, serachFiled } = this.state;\n\n    const monstersFliterd = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(serachFiled.toLowerCase())\n    );\n    console.log(monstersFliterd);\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">Monsters rolodex</h1>\n        <SearchBox onchange={this.serachFileHandler}></SearchBox>\n        <CardList monsters={monstersFliterd} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}